<?phpif(! defined ( 'DBGMS_ROOT' )){	exit ( 'No direct script access allowed' );}/** *  功能： *  1. 选择多个富表单元素，组合成一个富表单 */class FORM_Richform extends DbgMs_Admin {	public $title = 'FORM_富表单管理';	// 当前模块 modules	public $modules = 'form';	// 当前控制器 controllers	public $con = 'richform';	public $mysql_table = 'dbg_richform';                public function __construct($data, $jumpgroup = FALSE) {                parent::__construct($data, $jumpgroup);                $this->pagesize = 10;                $this->admin_data['addstep1_url'] = $this->admin_data['con_url'] . '&act=addstep1';//步骤一：填写富表单的基本信息                $this->admin_data['addstep2_url'] = $this->admin_data['con_url'] . '&act=addstep2';//步骤二：展示新的表单界面：选择富表单元素。                $this->admin_data['setstyle_url'] = $this->admin_data['con_url'] . '&act=setstyle';//设置style样式                $this->admin_data['setname_url'] = $this->admin_data['con_url'] . '&act=setname';//设置表单元素name属性                $this->admin_data['setvalue_url'] = $this->admin_data['con_url'] . '&act=setvalue';//设置表单元素默认值                $this->admin_data['setattr_url'] = $this->admin_data['con_url'] . '&act=setattr';//设置富表单元素属性                $this->admin_data['setlilabel_url'] = $this->admin_data['con_url'] . '&act=setlilabel';//设置表单元素同级标签label以及父级标签li的样式                $this->admin_data['setsortnum_url'] = $this->admin_data['con_url'] . '&act=setsortnum';//设置表单元素在表单中的页面排版位置                $this->admin_data['enable_url'] = $this->admin_data['con_url'] . '&act=enable';//启用表单元素                $this->admin_data['getrichelement_url'] = $this->admin_data['con_url'] . '&act=getrichelement';//获取富表单元素                $this->admin_data['addelement_url'] = $this->admin_data['con_url'] . '&act=addelement';//为表单添加表单元素                $this->admin_data['removeelement_url'] = $this->admin_data['con_url'] . '&act=removeelement';//将表单元素从表单中移除                $this->admin_data['setselectoption_url'] = $this->admin_data['con_url'] . '&act=setselectoption';//设置select标签的子级option标签的值和样式                $this->admin_data['setelementtotable_url'] = $this->admin_data['con_url'] . '&act=setelementtotable';//将表单元素的name设置为表单关联表的表字段                $this->admin_data['showtocrud_url'] = $this->admin_data['con_url'] . '&act=showtocrud';//设置是否将该字段展示到crud管理                $this->admin_data['getjsevent_url'] = $this->admin_data['con_url'] . '&act=getjsevent';//获取表单元素js事件                $this->admin_data['setjsevent_url'] = $this->admin_data['con_url'] . '&act=setjsevent';//表单元素js事件入库                $this->admin_data['getauthregular_url'] = $this->admin_data['con_url'] . '&act=getauthregular';//获取表单元素验证规则                $this->admin_data['setauthregular_url'] = $this->admin_data['con_url'] . '&act=setauthregular';//表单元素验证规则入库                $this->admin_data['buildhtml_url'] = $this->admin_data['con_url'] . '&act=buildhtml';//生成html                 $this->admin_data['builddbtable_url'] = $this->admin_data['con_url'] . '&act=builddbtable';//生成数据库表                 $this->admin_data['manageelement_url'] = $this->admin_data['con_url'] . '&act=manageelement';//表单元素管理                $this->admin_data['elementlevelset_url'] = $this->admin_data['con_url'] . '&act=elementlevelset';//富表单元素级多设置入口                $this->admin_data['replicatelistyle_url'] = $this->admin_data['con_url'] . '&act=replicatelistyle';//表单元素的li标签的样式复制操作                $this->admin_data['replicatelabelstyle_url'] = $this->admin_data['con_url'] . '&act=replicatelabelstyle';//表单元素的label标签的样式复制操作                $this->admin_data['replicatetable_url'] = $this->admin_data['con_url'] . '&act=replicatetable';//表单的复制        }	// @action:默认列表	public function index()	{                $this->cacheRichFormInfo();                $this->getpage ();                // 搜索关键字                $where_sql = '';                $pageurl = '';                $q = trim(dbg_input_getpost('q'));                $this->admin_data['q'] = $q;                if($q != ''){                        $where_sql = " AND (rfname like '%{$q}%' OR bindproduct like '%{$q}%') ";                        $pageurl = "&q={$q}";                }                $sql = 'SELECT * FROM ' . $this->mysql_table . ' WHERE isdelete=0 '.$where_sql.'ORDER BY rfid DESC LIMIT ' . ($this->page - 1) * $this->pagesize . "," . $this->pagesize;                $this->admin_data['lists'] = dbg_query ( $sql );                foreach ($this->admin_data['lists'] as $key => $value) {                        $productinfo = explode('|', $value['bindproduct']);                        $this->admin_data['lists'][$key]['bindproductname'] = $productinfo[1];                }		// 当前模型内容总数		$total = dbg_query ( 'SELECT COUNT(rfid) AS d FROM ' . $this->mysql_table . ' WHERE isdelete=0 ' . $where_sql . ';' );		// 当前模型内容列表		$url = $this->admin_data['curr_url'] . $pageurl . '&page='; // 页脚url                $this->admin_data['pagebreak'] = $this->pagebreak ( $this->page, $total[0]['d'], $this->pagesize, $url ); // 生成页脚                $this->admin_data['views'] = _DBGMS_MODULES_ . 'form/views/'.$this->con.'/'.__FUNCTION__.'.php';		$this->load_view ();	}                //新建一个富表单                // 步骤一：填写富表单的基本信息;        public function addstep1(){                //获取所有的富表单元素的关键信息 rid rname bname attrtype                if( isset($_POST['rfname']) ){                        $field = $this->authstep1();                        $sql = $this->parse_table_sql ( $this->mysql_table, $field );                        $result = dbg_query ( $sql, FALSE );                        $rfid = dbg_db_insert_id();                                                $this->cacheRichFormInfo();                                                echo json_encode(array('result'=>$result,'rfid'=>$rfid));                        exit ();                } else {                        $this->admin_data['productlist'] = $this->getmodeldata();                        $this->admin_data['views'] = _DBGMS_MODULES_ . 'form/views/'.$this->con.'/'.__FUNCTION__.'.php';                        $this->load_view ();                }        }                // 步骤二：展示新的表单界面：选择富表单元素。        public function addstep2(){                //处理提交过来的 富元素表单信息                if(isset ( $_POST['submit'] )){                                            if(empty ( $_POST['relement'] )){                                echo '请选择富表单元素！';die;                        }                                                $sql = 'INSERT INTO `dbg_form_element` (`rfid`,`rid`,`operatetime`) VALUES';                        $relement = dbg_input_getpost ( 'relement' );                        $rfid = dbg_input_getpost ( 'rfid' );                                                $str = '';                        foreach ($relement as $key => $val) {                                //$str .= '("null","' . $rfid . '","' . $val . '"),';                                $str .= '("' . $rfid . '","' . $val . '","' . time() .'"),';                        }                                                $sql .= $str;                        $return = strrpos ($sql, ',');                        $sql[$return] = ';';                        $result = dbg_query($sql,false);                                                $this->cacheRichFormInfo();                                                echo json_encode(array('result'=>$result,'rfid'=>$rfid));                        exit();                } else{                        $rfid = dbg_input_getpost ( 'rfid' );                        //获取所有的富表单元素的关键信息 rid rname bname attrtype                        $this->getpage();                        $search['q'] = trim(dbg_input_getpost ( 'q' ));                        $wheresql = '';                        if($search['q'] != ''){                            $wheresql .= 'WHERE rname like "%'.$search['q'].'%" OR gname like "%'.$search['q'] . '%"';                        }                        $sql = 'SELECT rid,rname,bname,attrtype,gname FROM dbg_richformelement ' . $wheresql . ' ORDER BY operatetime DESC ';                        $this->admin_data['richelement'] = dbg_query ( $sql );                        $this->admin_data['search'] = $search;                        $this->admin_data['rfid'] = $rfid;                        $this->admin_data['views'] = _DBGMS_MODULES_ . 'form/views/'.$this->con.'/'.__FUNCTION__.'.php';                        $this->load_view ();                }        }                // @action：管理富表单的富表单元素        public function manageelement(){                $rfid = dbg_input_getpost ( 'rfid' );                $rfname = dbg_input_getpost ( 'rfname' );                //取出富表单元素及其相关属性值                $sql = 'SELECT a.*,b.rname,b.bname,b.attrtype,b.attrtype FROM `dbg_form_element` a LEFT JOIN `dbg_richformelement` b ON a.rid=b.rid WHERE 1=1 AND a.rfid="' . $rfid . '" ORDER BY a.sortnum DESC;';                $this->admin_data['lists'] = dbg_query($sql);                $this->admin_data['rfid'] = $rfid;                $this->admin_data['rfname'] = $rfname;                                $this->admin_data['views'] = _DBGMS_MODULES_ . 'form/views/'.$this->con.'/'.__FUNCTION__.'.php';                $this->load_view ();        }                /*         * @action 富表单元素级多设置入口         */        public function elementlevelset(){                if(isset ( $_POST['attrname'] )){                        $field = $this->authelementlevelset();                        $rid = dbg_input_getpost ( 'rid' );                        $where_sql = " rfid =" . $field['rfid'] . " AND rid=" . $rid;                        $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql);                        $result = dbg_query ( $sql, FALSE );                        echo $result;                        exit ();                }else{                        $rfid = dbg_input_getpost ( 'rfid' );                        $rid = dbg_input_getpost ( 'rid' );                        $this->admin_data['rfname'] = dbg_input_getpost ( 'rfname' );                        $this->admin_data['rfid'] = $rfid;                        $this->admin_data['rid'] = $rid;                        $sql = 'SELECT a.*,b.rname,b.bname,b.attrtype FROM `dbg_form_element` a LEFT JOIN `dbg_richformelement` b ON a.rid=b.rid WHERE 1=1 AND a.rid="'.$rid.'" AND a.rfid="' . $rfid . '" ORDER BY a.sortnum DESC;';                        $tmpdata = dbg_query($sql);                        $this->admin_data['elementinfo'] = $tmpdata[0];                        unset($tmpdata);                        $this->admin_data['formhtml'] = file_get_contents($htmlfileuri);                        $this->admin_data['views'] = _DBGMS_MODULES_ . 'form/views/'.$this->con.'/'.__FUNCTION__.'.php';                        $this->load_view ();                }        }                // @action: 编辑修改富表单基本信息        public function edit(){                $rfid = dbg_input_getpost ( 'rfid' );                //获取所有的富表单元素的关键信息 rid rname bname attrtype                if( isset($_POST['rfname']) ){                        $field = $this->authstep1();                        $where_sql = " rfid =" . $field['rfid'];                        $sql = $this->parse_table_sql ( $this->mysql_table, $field, $where_sql);                        $result = dbg_query ( $sql, FALSE );                                                $this->cacheRichFormInfo();                                                echo $result;                        exit ();                } else {                        $data = dbg_query('SELECT rfid,rfname,bindproduct,action,method,description,tablename,jumpurl,okmsg FROM `dbg_richform` WHERE rfid="' . $rfid . '"');                        $this->admin_data['forminfo'] = $data[0];                        $this->admin_data['productlist'] = $this->getmodeldata();                        $this->admin_data['views'] = _DBGMS_MODULES_ . 'form/views/'.$this->con.'/'.__FUNCTION__.'.php';                        $this->load_view ();                }        }                // @action预览富表单        public function overview(){                $rfid = dbg_input_getpost ( 'rfid' );                                // 获取表单文件路径                /*$htmlfileuri = dbg_query('SELECT cachefile FROM `dbg_richform` WHERE rfid='.$rfid, true);                $htmlfileuri = $htmlfileuri[0]['cachefile'];*/                                $richformlist = require_once DBG_DATA.'cache.richform.php';                $htmlfileuri = DBG_DATA.$richformlist[$rfid]['cachefile'];                                $this->admin_data['formhtml'] = file_get_contents($htmlfileuri);                if($this->admin_data['formhtml'] == ''){                        $this->admin_data['formhtml'] = '请先生成html';                }                $this->admin_data['views'] = _DBGMS_MODULES_ . 'form/views/'.$this->con.'/'.__FUNCTION__.'.php';                $this->load_view ();        }                /*          * @action: 假删 对应回收站功能         */        public function delete(){		$rfid = dbg_input_getpost ( 'id' );		$rfid = intval ( $rfid );		if($rfid != NULL)		{			$relust_sql = dbg_query ( 'UPDATE '. $this->mysql_table .' SET isdelete=1 WHERE rfid=' . $rfid, FALSE );			if($relust_sql == TRUE)			{				$result_json['StatusCode'] = 200;				$result_json['id'] = $rfid;			}			else			{				$result_json['StatusCode'] = 404;				$result_json['msg'] = "删除失败,数据操作错误";			}			echo json_encode ( $result_json );			exit ();		}		else		{			redirect ( $this->admin_data['con_url'] ); // 返回列表			exit ();		}        }                /*         * @action 表单元素的li标签样式复制操作         */        public function replicatelistyle(){                $rfid = trim(dbg_input_getpost ( 'rfid' ));                $sourceid = trim(dbg_input_getpost ( 'sourcerid' ));                $destinationrids = trim(dbg_input_getpost ( 'destinationrids' ));                                $this->checkpost(array("'",'"','\\'), array($sourceid,$destinationrids));                                // 检查数据源sourcerid是否存在                $tmpdata = dbg_query('SELECT rid FROM `dbg_form_element` WHERE rfid='.$rfid.' AND rid='.$sourceid,true);                if( empty($tmpdata) ){                        echo '数据源不存在';                        exit();                }                                // 获取数据源的li和label样式                $styles = dbg_query('SELECT listyle FROM `dbg_form_element` WHERE rfid='.$rfid.' AND rid='.$sourceid,true);                $styles = $styles[0];                                // 检查目标destinationrids是否存在                $destinationrids = explode('|', $destinationrids);                foreach ($destinationrids as $key => $value) {                    if(!is_numeric($value)){                            echo "数据源输入有误";                            exit();                    }                    $tmpdata = dbg_query('SELECT rid FROM `dbg_form_element` WHERE rfid='.$rfid.' AND rid='.$value,true);                    if( empty($tmpdata) ){                            echo "数据源 {$value} 不存在";                            exit();                    }                    $sql = "UPDATE `dbg_form_element` SET listyle='".$styles['listyle']."' WHERE rfid=$rfid AND rid=$value";                    $result = dbg_query($sql,false);                }                echo $result;                exit();                        }                /*         * @action 表单元素的label标签样式复制操作         */        public function replicatelabelstyle(){                $rfid = trim(dbg_input_getpost ( 'rfid' ));                $sourceid = trim(dbg_input_getpost ( 'sourcerid' ));                $destinationrids = trim(dbg_input_getpost ( 'destinationrids' ));                                $this->checkpost(array("'",'"','\\'), array($sourceid,$destinationrids));                                // 检查数据源sourcerid是否存在                $tmpdata = dbg_query('SELECT rid FROM `dbg_form_element` WHERE rfid='.$rfid.' AND rid='.$sourceid,true);                if( empty($tmpdata) ){                        echo '数据源不存在';                        exit();                }                                // 获取数据源的label样式                $styles = dbg_query('SELECT labelstyle FROM `dbg_form_element` WHERE rfid='.$rfid.' AND rid='.$sourceid,true);                $styles = $styles[0];                                // 检查目标destinationrids是否存在                $destinationrids = explode('|', $destinationrids);                foreach ($destinationrids as $key => $value) {                    if(!is_numeric($value)){                            echo "数据源输入有误";                            exit();                    }                    $tmpdata = dbg_query('SELECT rid FROM `dbg_form_element` WHERE rfid='.$rfid.' AND rid='.$value,true);                    if( empty($tmpdata) ){                            echo "数据源 {$value} 不存在";                            exit();                    }                    $sql = "UPDATE `dbg_form_element` SET labelstyle='".$styles['labelstyle']."' WHERE rfid=$rfid AND rid=$value";                    $result = dbg_query($sql,false);                }                echo $result;                exit();                        }                /*         * @action 表单的复制         */        public function replicatetable(){                $sourcerfid = trim(dbg_input_getpost ( 'sourcerfid' ));                $destinationrids = trim(dbg_input_getpost ( 'destinationrids' ));                                $this->checkpost(array("'",'"','\\'), array($sourcerfid,$destinationrids));                                if( empty($sourcerfid) || empty($destinationrids)){                        echo '请输入数据源和目标';                        exit();                }                                // 检查数据源sourcerid是否存在 并获取数据                $sourceinfo = dbg_query('SELECT * FROM `dbg_richform` WHERE rfid='.$sourcerfid,true);                $sourceinfo = $sourceinfo[0];                                if( empty($sourceinfo) ){                        echo '数据源不存在';                        exit();                }                                // 检查目标的表名和表单名称是否存在                $destinfo = explode('|', $destinationrids);                $destinfo[0] = trim($destinfo[0]);                $destinfo[1] = trim($destinfo[1]);                // 验证目标的表名输入是否合法                $isok = preg_match('/^[_A-Za-z0-9]+$/', $destinfo[0]);                if(!$isok){                        echo '请输入正确的表名:由字母数字下划线构成';                        exit();                }                $exist = dbg_query('SELECT rfid FROM `dbg_richform` WHERE tablename="'.$destinfo[0].'" OR rfname="'.$destinfo[1].'"',true);                if($exist){                        echo '表名或表单名已经存在';                        exit();                }                                // 获取源表单和富表单元素的关系                $sourcerelationship = dbg_query('SELECT * FROM `dbg_form_element` WHERE rfid='.$sourcerfid);                                // 给富表单表增加一条新记录                $time = time();                $insertsql_rf = "INSERT INTO `dbg_richform` (`rfname`,`tablename`,`bindproduct`,`action`,`method`,`okmsg`,`jumpurl`,`isdelete`,`jsfileaddr`,`outdivstyle`,`formstyle`,"                        . "`ulstyle`,`buttondivstyle`,`description`,`cachefile`,`istablebuild`,`operatetime`) "                        . " VALUES ('{$destinfo[1]}','{$destinfo[0]}','{$sourceinfo['bindproduct']}','{$sourceinfo['action']}','{$sourceinfo['method']}','{$sourceinfo['okmsg']}','{$sourceinfo['jumpurl']}',"                        . "'{$sourceinfo['isdelete']}','{$sourceinfo['jsfileaddr']}','{$sourceinfo['outdivstyle']}','{$sourceinfo['formstyle']}','{$sourceinfo['ulstyle']}','{$sourceinfo['buttondivstyle']}','{$sourceinfo['description']}',"                        . "'',1,'{$time}')";                dbg_query($insertsql_rf,false);                $newrfid = dbg_db_insert_id();//新增记录的id                                // 数据处理                foreach ($sourcerelationship as $key => $value) {                        $sourcerelationship[$key]['id'] = '';                        $sourcerelationship[$key]['rfid'] = $newrfid;                        $sourcerelationship[$key]['operatetime'] = time();                }                                // 构建插入sql语句                $insertsql_f_e = 'INSERT INTO `dbg_form_element` (`rfid`,`rid`,`attrname`,`nametag`,`namelength`,`namecharset`,`namecomment`,`attrid`,`attrclass`,`attrvalue`,`listyle`,`labelstyle`,'                        . '`labelcontent`,`attrmaxlength`,`attrplaceholder`,`optionvalue`,`optioncontent`,`optionstyle`,`regid`,`regname`,`jseid`,`jsename`,`sortnum`,`enable`,`isrecord`,`isshow`,`operatetime`) VALUES';                foreach ($sourcerelationship as $key => $value) {                        $insertsql_f_e .= "('{$value['rfid']}','{$value['rid']}','{$value['attrname']}','{$value['nametag']}','{$value['namelength']}','{$value['namecharset']}',"                        . "'{$value['namecomment']}','{$value['attrid']}','{$value['attrclass']}' ,'{$value['attrvalue']}','{$value['listyle']}','{$value['labelstyle']}','{$value['labelcontent']}',"                        . "'{$value['attrmaxlength']}','{$value['attrplaceholder']}','{$value['optionvalue']}','{$value['optioncontent']}','{$value['optionstyle']}'"                        . ",'{$value['regid']}','{$value['regname']}','{$value['jseid']}','{$value['jsename']}','{$value['sortnum']}','{$value['enable']}','{$value['isrecord']}','{$value['isshow']}','{$value['operatetime']}'),";                }                                // 将sql语句后面的‘,’去掉                $pos = strrpos($insertsql_f_e, ',');                $insertsql_f_e[$pos] = ' ';                                $result = dbg_query($insertsql_f_e,false);                $this->builddbtable($newrfid,true);                $this->buildhtml($newrfid,true);                                echo $result;                exit();        }                /*         *  @action: 设置style样式         *  设置样式时，修改html字段         */        public function setstyle(){                $field = $this->checksetstyle();                if ( $field['rfid'] ){                        $where_sql = " rfid =" . $field['rfid'];                }                $sql = $this->parse_table_sql ( $this->mysql_table, $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                echo $result;                exit ();        }                /*         * @action：设置表单元素name属性         */        public function setname(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['attrname'] = trim(dbg_input_getpost ( 'attrname' )); // 富表单元素rid                 $field['namelength'] = trim(dbg_input_getpost ( 'namelength' ));//对应的表字段长度                $field['namecharset'] = trim(dbg_input_getpost ( 'namecharset' ));//对应的表字段长度的数据类型                $field['namecomment'] = trim(dbg_input_getpost ( 'namecomment' ));//对应的表字段的备注信息                $field['nametag'] = trim(dbg_input_getpost ( 'nametag' ));//表单数据管理时需要展示的标识                $field['operatetime'] = time(); //操作时间                                $this->checkpost(array("'",'"','\\'), array($field['attrname'],$field['namelength'],$field['namecharset'],$field['namecomment'],$field['nametag']));                                if (empty ($field['attrname'])){                        echo '属性name是用于提交表单的重要属性,不能为空.';                        exit();                }                if (empty ($field['namelength'])){                        echo '属性namelength是对应的表字段长度的重要属性,不能为空.';                        exit();                }                if (empty ($field['namecharset'])){                        echo '属性namecharset是对应的表字段长度的数据类型的重要属性,不能为空.';                        exit();                }                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * @action:设置表单元素默认值         */        public function setvalue(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['attrvalue'] = trim(dbg_input_getpost ( 'attrvalue' )); // 富表单元素rid                $field['operatetime'] = time(); //操作时间                $this->checkpost(array("'",'"','\\'), array($field['attrvalue']));                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * @action:设置富表单元素属性 id class maxlength placeholder         */        public function setattr(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['attrid'] = trim(dbg_input_getpost ( 'attrid' )); // 富表单元素属性id                $field['attrclass'] = trim(dbg_input_getpost ( 'attrclass' )); // 富表单元素属性class                $field['attrmaxlength'] = trim(dbg_input_getpost ( 'attrmaxlength' )); // 富表单元素属性maxlength                $field['attrplaceholder'] = trim(dbg_input_getpost ( 'attrplaceholder' )); // 富表单元素属性placeholder                $field['operatetime'] = time(); //操作时间                                $this->checkpost(array("'",'"','\\'), array($field['attrid'],$field['attrclass'],$field['attrmaxlength'],$field['attrplaceholder']));                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * @action:设置富表单元素同级标签label样式以及上级标签li的样式         */        public function setlilabel(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['attrid'] = trim(dbg_input_getpost ( 'attrid' )); // 富表单元素属性id                $field['listyle'] = trim(dbg_input_getpost ( 'listyle' )); // 富表单元素同级标签li的样式属性                $field['labelstyle'] = trim(dbg_input_getpost ( 'labelstyle' )); // 富表单元素上级标签label的样式属性                $field['labelcontent'] = trim(dbg_input_getpost ( 'labelcontent' )); // 富表单元素上级标签label标签所显示的文字                $field['operatetime'] = time(); //操作时间                                $this->checkpost(array("'",'"','\\'), array($field['attrid'],$field['labelcontent']));                                $this->checkstyle($field['listyle'], 'li标签的样式设置有误 格式为 style=""');                $this->checkstyle($field['labelstyle'], 'label标签的样式设置有误 格式为 style=""');                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * @action:设置富表单元素同级标签label样式以及上级标签li的样式         */        public function setsortnum(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['attrid'] = trim(dbg_input_getpost ( 'attrid' )); // 富表单元素属性id                $field['sortnum'] = trim(dbg_input_getpost ( 'sortnum' )); // 富表单元素同级标签li的样式属性                $field['operatetime'] = time(); //操作时间                                $this->checkpost(array("'",'"','\\'), array($field['sortnum']));                                if (!is_numeric($field['sortnum'])){                        echo '排序值只能为数字';                        die;                }                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * 禁用启用富表单元素         */        public function enable(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['enable'] = trim(dbg_input_getpost ( 'value' )); // 富表单元素属性id                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * 将表单元素的name设为表字段         */        public function setelementtotable(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['isrecord'] = trim(dbg_input_getpost ( 'value' )); // 富表单元素属性id                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * 设置富表单元素的js事件入库         */        public function setjsevent(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $jseid_jsename1 = trim(dbg_input_getpost ( 'eventname' )); // js事件id和js事件名称                $jseid_jsename = explode('|', $jseid_jsename1);                $field['jseid'] = $jseid_jsename[0];                $field['jsename'] = $jseid_jsename[1];                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * 设置富表单元素验证规则入库         */        public function setauthregular(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $regularinfo1 = trim(dbg_input_getpost ( 'regularinfo' )); // js事件id和js事件名称                $regularinfo = explode('|', $regularinfo1);                $field['regid'] = $regularinfo[0];                $field['regname'] = $regularinfo[1];                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * 将表单元素的name展示到crud显示出来         */        public function showtocrud(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['isshow'] = trim(dbg_input_getpost ( 'value' )); // 富表单元素属性id                                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                                echo $result;                exit ();        }                /*         * @action 返回除了除了已选的富表单元素         */        public function getrichelement(){                $this->getpage ();//获取页码                $rfid = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $q = trim(dbg_input_getpost ( 'q' )); // 搜索关键字                                $this->checkpost(array("'",'"','\\'), array($q));                                //1. 获取已经选择的富表单元素rid                $result = dbg_query ( 'SELECT rid FROM `dbg_form_element` WHERE rfid="'.$rfid.'" ORDER BY rid ASC', true );                                $selected = array();                $where = '';                if( !empty($result) ){                        foreach ($result as $key => $value) {                            $selected[] = $value['rid'];                        }                        $where = ' WHERE rid NOT IN (';                        $selected = implode(',', $selected);                        $where .= $selected;                        $where .= ') ';                }                $order = ' ORDER BY operatetime DESC ';                $like = '';                if($q != ''){                        $like = " AND rname like '%{$q}%' OR gname like '%{$q}%' ";                        //$like = " AND rname like '%{$q}%'";                }                $total = dbg_query ('SELECT COUNT(rid) AS d FROM `dbg_richformelement`' . $where . $like . $order );                $limit = ' LIMIT ' . ($this->page - 1) * $this->pagesize . "," . $this->pagesize;                $sql = 'SELECT rid,rname,gname FROM `dbg_richformelement`' . $where . $like . $order.$limit;                                $allelements = dbg_query($sql,true);                $url = $this->admin_data['curr_url'] . '&act=getrichelement&page='; // 页脚url                $this->admin_data['pagebreak'] = $this->elementajaxpagebreak ( $this->page, $total[0]['d'], $this->pagesize, $url, $rfid,$q); // 生成页脚                $dataarr = array(                    'rfid' => $rfid,                    'lists' => $allelements,                    'pagebreak' => $this->admin_data['pagebreak']                );                echo json_encode($dataarr);                die;        }                /*         * @action 返回js事件,用于绑定到表单元素         */        public function getjsevent(){                $this->getpage ();//获取页码                $rfid = dbg_input_getpost ( 'rfid' );                $rid = dbg_input_getpost ( 'rid' );                $rname = dbg_input_getpost ( 'rname' );                                $order = ' ORDER BY operatetime DESC ';                $total = dbg_query ('SELECT COUNT(jseid) AS d FROM `dbg_jsevent`' . $order );                $limit = ' LIMIT ' . ($this->page - 1) * $this->pagesize . "," . $this->pagesize;                $sql = 'SELECT jseid,jsename,eventname FROM `dbg_jsevent`' . $order.$limit;                                $allevents = dbg_query($sql,true);                $url = $this->admin_data['curr_url'] . '&act=getjsevent&page='; // 页脚url                $this->admin_data['pagebreak'] = $this->jseventajaxpagebreak ( $this->page, $total[0]['d'], $this->pagesize, $url,$rfid,$rid,$rname); // 生成页脚                $dataarr = array(                    'lists' => $allevents,                    'pagebreak' => $this->admin_data['pagebreak']                );                echo json_encode($dataarr);                die;        }                /*         * @action 返回表单验证规则，用于提交表单时进行表单数据验证         */        public function getauthregular(){                $this->getpage ();//获取页码                $rfid = dbg_input_getpost ( 'rfid' );                $rid = dbg_input_getpost ( 'rid' );                $rname = dbg_input_getpost ( 'rname' );                $q = trim(dbg_input_getpost ( 'q' )); // 搜索关键字                $this->checkpost(array("'",'"','\\'), array($q));                                $like = '';                if($q != ''){                        $like = " AND regname like '%{$q}%' ";                }                                $order = ' ORDER BY operatetime DESC ';                $total = dbg_query ('SELECT COUNT(regid) AS d FROM `dbg_regular` WHERE 1=1 ' . $like . $order );                $limit = ' LIMIT ' . ($this->page - 1) * $this->pagesize . "," . $this->pagesize;                $sql = 'SELECT regid,regname FROM `dbg_regular` WHERE 1=1 ' . $like . $order.$limit;                                $allregulars = dbg_query($sql,true);                $url = $this->admin_data['curr_url'] . '&act=getauthregular&page='; // 页脚url                $this->admin_data['pagebreak'] = $this->authregularajaxpagebreak ( $this->page, $total[0]['d'], $this->pagesize, $url,$rfid,$rid,$rname,$q); // 生成页脚                $dataarr = array(                    'lists' => $allregulars,                    'pagebreak' => $this->admin_data['pagebreak']                );                echo json_encode($dataarr);                die;        }                /*         * @function 为富表单新增富表单元素         */        public function addelement(){                //虽然已对已经绑定的富表单元素进行过滤，但还应做到再插入前再进行判断，后期完善                if(empty ( $_POST['relement'] )){                        echo '请选择富表单元素！';die;                }                $sql = 'INSERT INTO `dbg_form_element` (`rfid`,`rid`,`operatetime`) VALUES';                $relement = dbg_input_getpost ( 'relement' );                $rfid = dbg_input_getpost ( 'rfid' );                $str = '';                foreach ($relement as $key => $val) {                        $str .= '("' . $rfid . '","' . $val . '","' . time() .'"),';                }                $sql .= $str;                $return = strrpos ($sql, ',');                $sql[$return] = ';';                $result = dbg_query($sql,false);                echo $result;                exit();        }                /*         * @action 为select元素设置option         * 【待解决样式中单引号的bug】         */        public function setselectoption(){                $field = array();                $field['rfid'] = trim(dbg_input_getpost ( 'rfid' )); // 富表单rfid                $field['rid'] = trim(dbg_input_getpost ( 'rid' )); // 富表单元素rid                $field['optionvalue'] = trim(dbg_input_getpost ( 'optionvalue' )); // 富表单元素select的自己元素属性value值                $field['optionstyle'] = trim(dbg_input_getpost ( 'optionstyle' )); // 富表单元素select的自己元素属性style值                $field['optioncontent'] = trim(dbg_input_getpost ( 'optioncontent' )); // 富表单元素select的自己元素属性style值                $this->checkpost(array("'",'"','\\'), array($field['optionvalue'],$field['optionstyle'],$field['optioncontent']));                $this->checkstyle($field['optionstyle'], '样式格式有误');                $where_sql = " rfid ='" . $field['rfid'] . "' AND rid='" . $field['rid'] . "'";                $sql = $this->parse_table_sql ( 'dbg_form_element', $field, $where_sql );                $result = dbg_query ( $sql, FALSE );                echo $result;                exit ();        }                /*         * @action 把富表单元素从富表单中移除         */        public function removeelement(){                $rfid = dbg_input_getpost ( 'rfid' );                $rid = dbg_input_getpost ( 'rid' );                                $sql = 'DELETE FROM `dbg_form_element` WHERE rfid="' . $rfid . '" AND rid="' . $rid . '"';                $result = dbg_query($sql,false);                echo $result;                exit();        }                /*         * 表单验证          */        protected function authstep1(){                $field = array();                $field['rfname'] = trim(dbg_input_getpost ( 'rfname' )); // 富表单名称                $field['method'] = dbg_input_getpost ( 'method' ); // 富表单提交方式 1post 或2get                $field['action'] = trim(dbg_input_getpost ( 'action' )); // 富表单提交地址                $field['description'] = trim(dbg_input_getpost ( 'description' )); // 富表单描述                $field['tablename'] = trim(dbg_input_getpost ( 'tablename' )); // 富表单关联表                $field['bindproduct'] = trim(dbg_input_getpost ( 'bindproduct' )); // 富表单绑定的产品                $field['jumpurl'] = trim(dbg_input_getpost ( 'jumpurl' )); // 表单提交成功后的跳转地址                $field['okmsg'] = trim(dbg_input_getpost ( 'okmsg' )); // 表单提交成功提示语                $field['rfid'] = dbg_input_getpost ( 'rfid' );                $field['operatetime'] = time(); // 操作时间                if(!$field['rfid']){                		unset($field['rfid']);                }                                $this->checkpost(array("'",'"','\\'), array($field['rfname'],$field['method'],$field['action'],$field['description'],$field['tablename'],$field['jumpurl'],$field['okmsg']));                                $field['method'] = $field['method']=='1' ? 'post' : 'get';                                if( empty($field['rfname']) ){                        echo '富表单名称不能为空';die;                }                if( empty($field['tablename']) ){                        echo '关联数据库表名不能为空';die;                }                                if($field['rfid'] != ''){//编辑时                        //富表单名称唯一性判断                        $sql = 'SELECT * FROM ' . $this->mysql_table . ' WHERE rfname="'.$field['rfname'].'" AND rfid !="'.$field['rfid'].'"';                        $result = dbg_query ( $sql, true );                        if( count($result) ){                                echo '该富表单名称已存在';die;                        }                        //所绑定的关联表名唯一性判断                        $sql = 'SELECT * FROM ' . $this->mysql_table . ' WHERE tablename="'.$field['tablename'].'" AND rfid !="'.$field['rfid'].'"';                        $result = dbg_query ( $sql, true );                        if( count($result) ){                                echo '该表名已被使用';die;                        }                                         }else{//新增时                        //富表单名称唯一性判断                        $sql = 'SELECT * FROM ' . $this->mysql_table . ' WHERE rfname="'.$field['rfname'].'"';                        $result = dbg_query ( $sql, true );                        if( count($result) ){                                echo '该富表单名称已存在';die;                        }                        //所绑定的关联表名唯一性判断                        $sql = 'SELECT * FROM ' . $this->mysql_table . ' WHERE tablename="'.$field['tablename'].'"';                        $result = dbg_query ( $sql, true );                        if( count($result) ){                                echo '该表名已被使用';die;                        }                 }                                return $field;        }                protected function authelementlevelset(){                $field['rfid'] = dbg_input_getpost ( 'rfid' );                 $field['attrname'] = trim(dbg_input_getpost ( 'attrname' ));                $field['nametag'] = trim(dbg_input_getpost ( 'nametag' ));                $field['namelength'] = trim(dbg_input_getpost ( 'namelength' ));                $field['namecomment'] = trim(dbg_input_getpost ( 'namecomment' ));                $field['namecharset'] = trim(dbg_input_getpost ( 'namecharset' ));                $field['attrvalue'] = trim(dbg_input_getpost ( 'attrvalue' ));                $field['labelcontent'] = trim(dbg_input_getpost ( 'labelcontent' ));                $field['attrmaxlength'] = trim(dbg_input_getpost ( 'attrmaxlength' ));                $field['attrplaceholder'] = trim(dbg_input_getpost ( 'attrplaceholder' ));                $field['listyle'] = trim(dbg_input_getpost ( 'listyle' ));                $field['labelstyle'] = trim(dbg_input_getpost ( 'labelstyle' ));                $field['attrid'] = trim(dbg_input_getpost ( 'attrid' ));                $field['attrclass'] = trim(dbg_input_getpost ( 'attrclass' ));                                $this->checkpost(array("'",'"','\\'), array($field['attrname'],$field['nametag'],$field['namelength'],$field['namecomment'],$field['namecharset'],$field['attrvalue'],$field['labelcontent']                        ,$field['attrmaxlength'],$field['attrplaceholder'],$field['attrid'],$field['attrclass']));                                if( empty($field['attrname']) ){                        echo '标签属性name不能为空';die;                }                if( empty($field['nametag']) ){                        echo 'CRUD数据标识不能为空';die;                }                if( empty($field['namelength']) ){                        echo '数据库存储长度不能为空';die;                }                if( empty($field['namecharset']) ){                        echo '请选择数据库存储数据类型';die;                }                if( empty($field['attrmaxlength']) ){                        echo '表单元素属性maxlength不能为空';die;                }                                return $field;        }        /*         * 验证style         * 只做简单的验证         */        protected function checksetstyle(){                $field = array();                $field['rfid'] = dbg_input_getpost ('rfid');                $field['outdivstyle'] = trim ( dbg_input_getpost ( 'outdivstyle' )); // 外层div样式                $field['formstyle'] = trim ( dbg_input_getpost ( 'formstyle' )); // form标签样式                $field['ulstyle'] = trim ( dbg_input_getpost ( 'ulstyle' )); // ul标签样式                $field['buttondivstyle'] = trim ( dbg_input_getpost ( 'buttondivstyle' )); // button区div样式                                $regular = '/(style|STYLE)\s*=\s*(").*\2$/';                if (!empty ($field['outdivstyle']) && !preg_match ($regular, $field['outdivstyle'])){                        echo '外层div样式设置不正确 格式为 style=""';                        die;                }                if (!empty ($field['formstyle']) && !preg_match ($regular, $field['formstyle'])){                        echo 'form标签样式设置不正确  格式为 style=""';                        die;                }                if (!empty ($field['ulstyle']) && !preg_match ($regular, $field['ulstyle'])){                        echo 'ul标签样式设置不正确  格式为 style=""';                        die;                }                if (!empty ($field['buttondivstyle']) && !preg_match ($regular, $field['buttondivstyle'])){                        echo 'button区div样式设置不正确  格式为 style=""';                        die;                }                                                return $field;        }                protected function checkstyle($str,$prompt){                $regular = '/(style|STYLE)\s*=\s*(").*\2$/';                if (!empty ($str) && !preg_match ($regular, $str)){                        echo $prompt;                        die;                }        }        	// @action: 分页	public function elementajaxpagebreak($currentPage, $total, $pageSize, $url,$rfid,$q='')	{		$pagetotal = ceil ( $total / $pageSize ); // 向上取整,算出分页		$paging = '<div class="dbgms_pagebreak">';		if($pagetotal == 1)		{			$paging .= '<a id="page1" rel="1" href=" ' . $url . '1" onclick="addelement('.$rfid.',1,\''.$q.'\');return false;">1</a>';		}		else		{			// 开头部分,是否显示上一页			if(($currentPage - 3) > 1)			{				$paging .= '<a id="page1" rel="1" href=" ' . $url . '1" onclick="addelement('.$rfid.',1,\''.$q.'\');return false;">1...</a>				<a  href=" ' . $url . ($currentPage - 1) . '"  rel="' . ($currentPage - 1) . '" class="next" onclick="addelement('.$rfid.','.($currentPage - 1).',\''.$q.'\');return false;">上一页</a>';			}			// 中间部分,输出7个分页			for($i = $currentPage - 3;$i < $currentPage + 4;$i ++)			{				if($i < 1 || $i > $pagetotal)				{					continue;				}				$paging .= '<a id="page' . $i . '" rel="' . $i . '" href=" ' . $url . $i . '" onclick="addelement('.$rfid.','.$i.',\''.$q.'\');return false;">' . $i . '</a>';			}			// 结尾部分,是否显示下一页			if(($currentPage + 4) <= $pagetotal)			{				$paging .= '<a href=" ' . $url . ($currentPage + 1) . '" rel="' . ($currentPage + 1) . '" class="next" onclick="addelement('.$rfid.','.($currentPage + 1).',\''.$q.'\');return false;">下一页</a>						<a id="page' . $pagetotal . '" rel="' . $pagetotal . '" href="' . $url . $pagetotal . '" onclick="addelement('.$rfid.','.$pagetotal.',\''.$q.'\');return false;">...' . $pagetotal . '</a>';			}		}		// 是否开启跳转		$pagego = '<input type="text" class="gopage" maxlength="3"/><a href="javascript:goPage(' . htmltostr ( $indexurl ) . ');">GO</a>';		$paging .= "<br/>(总共" . $total . "条记录 )</div>";		return $style . $paging . $javascript;	}        	// @action: 分页	public function jseventajaxpagebreak($currentPage, $total, $pageSize, $url,$rfid,$rid,$rname)	{		$pagetotal = ceil ( $total / $pageSize ); // 向上取整,算出分页		$paging = '<div class="dbgms_pagebreak">';		if($pagetotal == 1)		{			$paging .= '<a id="page1" rel="1" href=" ' . $url . '1" onclick="setjsevent(' . $rfid . ',' . $rid . ',\'' . $rname . '\',1);return false;">1</a>';		}		else		{			// 开头部分,是否显示上一页			if(($currentPage - 3) > 1)			{				$paging .= '<a id="page1" rel="1" href=" ' . $url . '1" onclick="setjsevent(' . $rfid . ',' . $rid . ',\'' . $rname . '\',1);return false;">1...</a>				<a  href=" ' . $url . ($currentPage - 1) . '"  rel="' . ($currentPage - 1) . '" class="next" onclick="setjsevent(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.($currentPage - 1).');return false;">上一页</a>';			}			// 中间部分,输出7个分页			for($i = $currentPage - 3;$i < $currentPage + 4;$i ++)			{				if($i < 1 || $i > $pagetotal)				{					continue;				}				$paging .= '<a id="page' . $i . '" rel="' . $i . '" href=" ' . $url . $i . '" onclick="setjsevent(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.$i.');return false;">' . $i . '</a>';			}			// 结尾部分,是否显示下一页			if(($currentPage + 4) <= $pagetotal)			{				$paging .= '<a href=" ' . $url . ($currentPage + 1) . '" rel="' . ($currentPage + 1) . '" class="next" onclick="setjsevent(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.($currentPage + 1).');return false;">下一页</a>						<a id="page' . $pagetotal . '" rel="' . $pagetotal . '" href="' . $url . $pagetotal . '" onclick="setjsevent(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.$pagetotal.');return false;">...' . $pagetotal . '</a>';			}		}		// 是否开启跳转		$pagego = '<input type="text" class="gopage" maxlength="3"/><a href="javascript:goPage(' . htmltostr ( $indexurl ) . ');">GO</a>';		$paging .= "<br/>(总共" . $total . "条记录 )</div>";		return $style . $paging . $javascript;	}        	// @action: 分页	public function authregularajaxpagebreak($currentPage, $total, $pageSize, $url,$rfid,$rid,$rname,$q='')	{		$pagetotal = ceil ( $total / $pageSize ); // 向上取整,算出分页		$paging = '<div class="dbgms_pagebreak">';		if($pagetotal == 1)		{			$paging .= '<a id="page1" rel="1" href=" ' . $url . '1" onclick="setauthregular(' . $rfid . ',' . $rid . ',\'' . $rname . '\',1,\''.$q.'\');return false;">1</a>';		}		else		{			// 开头部分,是否显示上一页			if(($currentPage - 3) > 1)			{				$paging .= '<a id="page1" rel="1" href=" ' . $url . '1" onclick="setauthregular(' . $rfid . ',' . $rid . ',\'' . $rname . '\',1,\''.$q.'\');return false;">1...</a>				<a  href=" ' . $url . ($currentPage - 1) . '"  rel="' . ($currentPage - 1) . '" class="next" onclick="setauthregular(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.($currentPage - 1).',\''.$q.'\');return false;">上一页</a>';			}			// 中间部分,输出7个分页			for($i = $currentPage - 3;$i < $currentPage + 4;$i ++)			{				if($i < 1 || $i > $pagetotal)				{					continue;				}				$paging .= '<a id="page' . $i . '" rel="' . $i . '" href=" ' . $url . $i . '" onclick="setauthregular(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.$i.',\''.$q.'\');return false;">' . $i . '</a>';			}			// 结尾部分,是否显示下一页			if(($currentPage + 4) <= $pagetotal)			{				$paging .= '<a href=" ' . $url . ($currentPage + 1) . '" rel="' . ($currentPage + 1) . '" class="next" onclick="setauthregular(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.($currentPage + 1).',\''.$q.'\');return false;">下一页</a>						<a id="page' . $pagetotal . '" rel="' . $pagetotal . '" href="' . $url . $pagetotal . '" onclick="setauthregular(' . $rfid . ',' . $rid . ',\'' . $rname . '\','.$pagetotal.',\''.$q.'\');return false;">...' . $pagetotal . '</a>';			}		}		// 是否开启跳转		$pagego = '<input type="text" class="gopage" maxlength="3"/><a href="javascript:goPage(' . htmltostr ( $indexurl ) . ');">GO</a>';		$paging .= "<br/>(总共" . $total . "条记录 )</div>";		return $style . $paging . $javascript;	}                /*         * @action 获取站内已安装模型所关联的数据         */        protected function getmodeldata(){                //得到已安装模型 多个                $installedmodels = dbg_query('SELECT * FROM `dbg_model` WHERE install=1',true);                                //获得table 多个                $tables = array();                foreach ($installedmodels as $key => $value) {                        $tables[] = $value['table'];                }                unset($installedmodels);                                //得到产品数据                $productlist = array();                foreach ($tables as $key => $value) {                        $tmp = dbg_query('SELECT id,title FROM `' . $value . '` WHERE state=0', true);                        foreach ($tmp as $key1 => $value1) {                                $tmp[$key1]['table'] = $value;                        }                        $productlist = array_merge($productlist,$tmp);                }                                return $productlist;        }                /*         * @action 生成富表单的html缓存文件         * c.eventname,c.functionname,c.functioncode 这三个未添加         */        public function buildhtml($rfid = '',$keepsilent = false){            $rfid = dbg_input_getpost ('rfid') ? dbg_input_getpost ('rfid') : $rfid;            if(!$rfid){                echo '请选择富表单';                exit();            }            //1. 获取富表单信息            $tmpdata = dbg_query('SELECT rfname,tablename,action,jumpurl,okmsg,method,outdivstyle,formstyle,ulstyle,buttondivstyle FROM `dbg_richform` WHERE rfid="' . $rfid . '"',TRUE);            $richforminfo = $tmpdata[0];            //2. 获取富表单成员 富表单元素,得到富表单元素的样式属性事件            $sql = 'SELECT b.bname as tagname,b.attrtype as tagtype,b.attrstyle as tagstyle,'                    . 'a.attrname,a.attrid,a.attrclass,a.attrvalue,a.listyle,a.labelstyle,a.labelcontent,a.attrmaxlength,'                    . ' a.attrplaceholder,a.optionvalue,a.optioncontent,a.optionstyle,c.eventname,c.functionname,c.functioncode '                    . ' FROM `dbg_form_element` a LEFT JOIN  `dbg_richformelement` b ON a.rid=b.rid LEFT JOIN `dbg_jsevent` c ON a.jseid=c.jseid'                    . ' WHERE a.rfid = "' . $rfid . '" AND a.enable=1 '                    . ' ORDER BY a.sortnum DESC';            $richelementlist = dbg_query($sql, TRUE);            //3. 设置html文件要保存的文件路径            $htmlfiledir = DBG_DATA . 'formhtml/';            if(!is_dir($htmlfiledir)){                mkdir($htmlfiledir, 0777, true);            }            //. 构造文档结构            $htmlstring1 = '<META http-equiv="content-type" content="text/html; charset=UTF-8">';            $htmlstring1 .= <<<EOT1    <div {$richforminfo['outdivstyle']}>        <form action="{$richforminfo['action']}" method="{$richforminfo['method']}" id="formhtmlsubmit" onsubmit="return formhtmlsubmit(this)" {$richforminfo['formstyle']} enctype="multipart/form-data">            <input type='hidden' name='rfid' value='{$rfid}'>            <ul {$richforminfo['ulstyle']}>EOT1;            $htmlstringul = '';            $htmlstringbuttondiv = '';            foreach ($richelementlist as $key => $value) {                    if($value['tagtype'] == 'button' || $value['tagtype'] == 'submit'){                            $htmlstringbuttondiv .= "<{$value['tagname']}";                            if($value['tagtype'] != ''){                                $htmlstringbuttondiv .= " type='{$value['tagtype']}'";                            }                            if($value['attrname'] != ''){                                $htmlstringbuttondiv .= " name='{$value['attrname']}'";                            }                            if($value['attrvalue'] != ''){                                $htmlstringbuttondiv .= " value='{$value['attrname']}'";                            }                            if($value['attrid'] != ''){                                $htmlstringbuttondiv .= " id='{$value['attrid']}'";                            }                            if($value['attrclass'] != ''){                                $htmlstringbuttondiv .= " class='{$value['attrclass']}'";                            }                            $htmlstringbuttondiv .= " {$value['tagstyle']}";                            $htmlstringbuttondiv .= '/>';                            continue;                    }                    $htmlstringul .= "<li {$value['listyle']}>";                    $htmlstringul .= "<label {$value['labelstyle']}>{$value['labelcontent']}</label>";                    $htmlstringul .= "<{$value['tagname']}";                    if($value['tagname'] == 'input'){//input                        $htmlstringul .= " type='{$value['tagtype']}' ";                    }                    //tagstyle attrname attrid attrclass attrvalue attrmaxlength attrplaceholder                    if($value['attrname'] != ''){                        $htmlstringul .= " name='{$value['attrname']}'";                    }                    if($value['attrvalue'] != ''){                        $htmlstringul .= " value='{$value['attrvalue']}'";                    }                    if($value['attrid'] != ''){                        $htmlstringul .= " id='{$value['attrid']}'";                    }                    if($value['attrclass'] != ''){                        $htmlstringul .= " class='{$value['attrclass']}'";                    }                    if($value['attrmaxlength'] != '' && $value['tagname'] != 'select' && $value['tagtype'] != 'checkbox' && $value['tagtype'] != 'radio'){                        $htmlstringul .= " maxlength='{$value['attrmaxlength']}'";                    }                    if($value['attrplaceholder'] != '' && $value['tagname'] != 'textarea'){                        $htmlstringul .= " placeholder='{$value['attrplaceholder']}'";                    }                    $htmlstringul .= " {$value['tagstyle']}";                    if($value['tagname'] == 'input'){                            $htmlstringul .= '/>';                            if($value['attrname'] == 'yanzhengma'){                                $htmlstringul .='<img class="check_img" style="float:right;" id="DbgMsLoginCaptchaImg" title="看不清楚?请点击刷新验证码" alt="看不清楚?请点击刷新验证码" />';                                $htmlstringul .= '<input type="hidden" name="needCheck" value="true" />';                            }                    }else{//select textarea                            $htmlstringul .= '>';                            if($value['tagname'] == 'select'){//                                $optionvalue = explode('|', $value['optionvalue']);                                $optioncontent = explode('|', $value['optioncontent']);                                foreach ($optionvalue as $keyop => $valueop) {                                    $htmlstringul .= "<option value='{$valueop}' {$value['optionstyle']}>".$optioncontent[$keyop]."</option>";                                }                            }                    }                    if($value['tagname'] != 'input'){                        $htmlstringul .= "</{$value['tagname']}>";                    }                    $htmlstringul .= "</li>";            }                        $htmlstring2 = <<<EOT2</ul>            <div {$richforminfo['buttondivstyle']}>EOT2;                        //buttondiv区html代码            $htmlstring3 = <<<EOT3</div>        </form>    </div>EOT3;if($richforminfo['okmsg'] == ''){$htmlstringjs = <<<EOT4<script>            function formhtmlsubmit(clickFlag){                var clickObj = $(clickFlag);                var address = '';                if ($("#s_province")){                    if($("#s_province").val() == '北京' || $("#s_province").val() == '上海' || $("#s_province").val() == '重庆'){                        address = $("#s_city").val()+'市'+$("#s_country").val();                    }else if($("#s_province").val() == '香港' || $("#s_province").val() == '澳门'){                        address = $("#s_city").val()+$("#s_country").val();                    }else{                        address = $("#s_province").val()+'省'+$("#s_city").val()+'市'+$("#s_country").val();                    }                    if ($(".address").val()){                        var info_address = $(".address").val();                        $(".address").val(info_address+"-"+address);                    }else{                        $(".address").val(address);                     }                 }               $.ajax({                 url:"{$richforminfo['action']}",                type:"POST",                data:clickObj.serialize(),                success:function(result){                  if(result==1){                    location.href="{$richforminfo['jumpurl']}";                    return;                  }else{                    alert(result);                  }                }              });              return false;            }</script>EOT4;}if($richforminfo['jumpurl'] == ''){$htmlstringjs = <<<EOT4<script>            function formhtmlsubmit(clickFlag){                var clickObj = $(clickFlag);                var address = '';                if ($("#s_province")){                    if($("#s_province").val() == '北京' || $("#s_province").val() == '上海' || $("#s_province").val() == '重庆'){                        address = $("#s_city").val()+'市'+$("#s_country").val();                    }else if($("#s_province").val() == '香港' || $("#s_province").val() == '澳门'){                        address = $("#s_city").val()+$("#s_country").val();                    }else{                        address = $("#s_province").val()+'省'+$("#s_city").val()+'市'+$("#s_country").val();                    }                    if ($(".address").val()){                        var info_address = $(".address").val();                        $(".address").val(info_address+"-"+address);                    }else{                        $(".address").val(address);                     }                 }                   $.ajax({                     url:"{$richforminfo['action']}",                    type:"POST",                    data:clickObj.serialize(),                    success:function(result){                      if(result==1){                        alert("{$richforminfo['okmsg']}");                        return;                      }else{                        alert(result);                      }                    }                  });                  return false;            }</script>EOT4;}if($richforminfo['jumpurl'] == '' && $richforminfo['okmsg'] == ''){$htmlstringjs = <<<EOT4<script>            function formhtmlsubmit(clickFlag){                var clickObj = $(clickFlag);                var address = '';                if ($("#s_province")){                    if($("#s_province").val() == '北京' || $("#s_province").val() == '上海' || $("#s_province").val() == '重庆'){                        address = $("#s_city").val()+'市'+$("#s_country").val();                    }else if($("#s_province").val() == '香港' || $("#s_province").val() == '澳门'){                        address = $("#s_city").val()+$("#s_country").val();                    }else{                        address = $("#s_province").val()+'省'+$("#s_city").val()+'市'+$("#s_country").val();                    }                    if ($(".address").val()){                        var info_address = $(".address").val();                        $(".address").val(info_address+"-"+address);                    }else{                        $(".address").val(address);                     }                 }               $.ajax({                 url:"{$richforminfo['action']}",                type:"POST",                data:clickObj.serialize(),                success:function(result){                  if(result==1){                    return;                  }else{                    alert(result);                  }                }              });              return false;            }</script>EOT4;}if($richforminfo['jumpurl'] != '' && $richforminfo['okmsg'] != ''){$htmlstringjs = <<<EOT4<script>            function formhtmlsubmit(clickFlag){                var clickObj = $(clickFlag);                var address = '';                if ($("#s_province")){                    if($("#s_province").val() == '北京' || $("#s_province").val() == '上海' || $("#s_province").val() == '重庆'){                        address = $("#s_city").val()+'市'+$("#s_country").val();                    }else if($("#s_province").val() == '香港' || $("#s_province").val() == '澳门'){                        address = $("#s_city").val()+$("#s_country").val();                    }else{                        address = $("#s_province").val()+'省'+$("#s_city").val()+'市'+$("#s_country").val();                    }                                        if ($(".address").val()){                        var info_address = $(".address").val();                        $(".address").val(info_address+"-"+address);                    }else{                        $(".address").val(address);                     }                 }                              $.ajax({                 url:"{$richforminfo['action']}",                type:"POST",                data:clickObj.serialize(),                success:function(result){                  if(result==1){                    alert("{$richforminfo['okmsg']}");                    location.href="{$richforminfo['jumpurl']}";                    return;                  }else{                    alert(result);                  }                }              });              return false;            }</script>EOT4;}$htmlstringyanzhengmajs = <<<EOT5<script>$(document).ready(function() {	/* 刷新验证码 */	var DbgMsLoginCaptchaImgObj = $('#DbgMsLoginCaptchaImg');	DbgMsLoginCaptchaImgObj.on('click', function() {		$('input[name=form_captcha]').val('');		this.src = '/zh/captcha?t=' + Math.random();	});	DbgMsLoginCaptchaImgObj.trigger('click');});</script>EOT5;            $htmlareajs = '<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>';  //添加            $htmlareajs .= '<script src="/dbgms/plugin/area/area.js"></script>';            $htmlareajs .= '<script>_init_area();</script>';            $htmlstring = $htmlstring1 . $htmlstringul . $htmlstring2 . $htmlstringbuttondiv . $htmlstring3 . $htmlstringjs . $htmlstringyanzhengmajs . $htmlareajs;            //#. 写入到html文件 html文件名和该表单关联的表名一致            $htmlfilename = $htmlfiledir . $richforminfo['tablename'] . '.html';            $fp = fopen($htmlfilename, 'w+');//一旦执行，则全部覆盖            fwrite($fp, $htmlstring);            fclose($fp);                        $filename = 'formhtml/'.$richforminfo['tablename'] . '.html';            //将html文件uri记录到数据库中            $result = dbg_query('UPDATE `dbg_richform` SET cachefile="' . $filename . '" WHERE rfid="' . $rfid . '"', false);            $this->cacheRichFormInfo();            if(!$keepsilent){                    echo $result;                    exit();            }        }                /*         * @action 生成数据库表         */        public function builddbtable($rfid = '',$keepsilent = false){                                $rfid = dbg_input_getpost ('rfid') ? dbg_input_getpost ('rfid') : $rfid;                if(!$rfid){                    echo '请选择富表单';                    exit();                }                                // 获取表基本信息                $tmpdata = dbg_query('SELECT tablename,bindproduct,description FROM `dbg_richform` WHERE rfid="' . $rfid . '"', true);                $tablebaseinfo = $tmpdata[0];                unset($tmpdata);                                // 获取表关联字段                $relativefields = array();                $tmpdata = dbg_query('SELECT rid,attrname,namelength,namecharset,namecomment,isshow,isrecord,nametag,namelength,attrmaxlength FROM `dbg_form_element` WHERE rfid="' . $rfid . '" AND enable=1 AND isrecord=1 ORDER BY sortnum DESC',true);                                // 让字段唯一                $relativefields = $tmpdata;                foreach ($tmpdata as $key => $value) {                        $conflictnum = 0;                        foreach ($relativefields as $key1 => $value1) {                                if($value['attrname'] == $value1['attrname']){                                        $conflictnum++;                                }                                if($conflictnum == 2){                                        unset($relativefields[$key]);                                }                        }                }                                $this->checkReadyBuildTable($tmpdata);                unset($tmpdata);                                // 删除数据库表                dbg_query("DROP TABLE IF EXISTS `{$tablebaseinfo['tablename']}`;",false);                                // 生成数据库表                $sqlstring = "CREATE TABLE IF NOT EXISTS `{$tablebaseinfo['tablename']}` (";                $sqlstring .= "`id` int(11) NOT NULL AUTO_INCREMENT COMMENT '表单id',";                if($tablebaseinfo['bindproduct'] != ''){                        $bindproductinfo = explode('|', $tablebaseinfo['bindproduct']);                        $sqlstring .= "`productid` int(11) COMMENT '关联产品id',";                        $sqlstring .= "`productname` varchar(32) COMMENT '关联产品名称',";                        $sqlstring .= "`producttable` varchar(32) COMMENT '关联产品表名',";                }                foreach ($relativefields as $key => $value) {                        $sqlstring .= "`{$value['attrname']}` {$value['namecharset']}({$value['namelength']}) COMMENT '{$value['namecomment']}',";                }                $sqlstring .= "`operatetime` int(11) COMMENT '操作时间',";                $sqlstring .= "PRIMARY KEY (`id`)";                $sqlstring .= ") ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT='富表单表' AUTO_INCREMENT=1 ;";                //$pos = strrpos($sqlmidle, ',');                $result = dbg_query($sqlstring,false);                                if($result == 1){                        dbg_query('UPDATE `dbg_richform` SET istablebuild=1 WHERE rfid="'.$rfid.'"',false);                }                if(!$keepsilent){                        echo $result;                        exit();                 }        }                /*         * @action 缓存富表单基本信息         */        protected function cacheRichFormInfo(){                $templist = dbg_query('SELECT * FROM `dbg_richform` ',true);                $datalist = array();                                foreach ($templist as $key => $value) {                        $datalist[$value['rfid']] = $value;                }                dbg_filecontent(DBG_DATA . 'cache.richform.php', $datalist, 4 );                unset($datalist);                unset($templist);        }        /*         * @action 是否满足创建数据库表         * 1. 只对启用的字段建立到表            2. 若isshow为1 则检查nametag设置            3. isrecord为1 则检查attrname 和 namelength         */        protected function checkReadyBuildTable($data = array()){                foreach ($data as $key => $value) {                        if($value['isshow'] == 1 && $value['nametag'] == ''){                                echo '富表单元素rid为'.$value['rid'].'的crud标识信息未设置';                                exit();                        }                        if( $value['isrecord'] == 1 &&                                 ( $value['attrname'] == '' || $value['namelength'] == '' )                                 ){                                echo '富表单元素rid为'.$value['rid'].'的属性name或name字段长度设置不正确';                                exit();                        }                        if($value['namelength'] != '' &&                                 ( intval($value['attrmaxlength']) == 0 || $value['namelength'] < $value['attrmaxlength'])                                ){                                echo '富表单元素rid为'.$value['rid'].'的属性输入最大长度设置不正确';                                exit();                        }                }                }                private function checkpost($unlegalchars,$data){                foreach ($data as $key => $value) {                        foreach ($unlegalchars as $key1 => $value1) {                                if(strstr($value,$value1)){                                        echo '提交的数据不能有 “' . $value1 . '”字符！' ;exit;                                }                        }                }        }}
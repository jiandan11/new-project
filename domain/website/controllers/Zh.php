 <?phpdefined ( 'BASEPATH' ) or exit ( 'No direct script access allowed' );class Zh extends CI_Controller {	public function __construct()	{		parent::__construct ();		$this->load->library ( 'session' );		$this->load->helper ( 'url' );		date_default_timezone_set ( 'Asia/Shanghai' );		error_reporting ( 0 );	}	/* 允许index传参 */	function _remap($method, $params = array())	{		if(method_exists ( $this, $method ))		{			return call_user_func_array ( array(					$this,					$method 			), $params );		}		else		{			$arr1stParam = array(					$method 			);			$params = array_merge ( $arr1stParam, $params );			call_user_func_array ( array(					$this,					'index' 			), $params );		}	}	/***前台调用***/	public function index($column = NULL, $id = NULL)	{		/*		 * 定制型开启该模式,修改		 */		$updete_html = $this->input->get_post ( 'html' );		// if($this->uri->segment ( 1, 0 ) == 'zh' && empty ( $updete_html ))		// {		// show_404 ();		// }		// if($this->uri->segment ( 1, 0 ) == 'zh')		// {		// show_404 ();		// }		define ( 'DBG_OPEN', TRUE );		require (_ROOT_ . 'dbgms/' . 'website_common.php');		$website['_column'] = $column = trim ( $column );		$dbgms_my = $_SESSION['dbg_user'];		if(! empty ( $dbgms_my ))		{			$website['_my'] = $dbgms_my;			$website['_my']['link'] = base_url () . 'user/' . $website['_my']['id'];		}		// 频道-栏目-当前列表		// 当前栏目频道 内容列表		if($column != NULL)		{			$website['_channel'] = getColumn ( NULL, $column );			$website['tep_path'] = $website['_channel']['views'];						if(empty ( $website['_channel'] ))			{				show_404 ();			}			else			{				// 单个内容（文章、图文、产品、app、音乐等*）				if($id != NULL)				{ // 获取完整的url										if($column == 'feedback')					{						show_404 ();					}					dbg_is_suffix ( NULL, '.html' );					$id = intval ( $id );					if(! is_numeric ( $id ) || $id == 0)					{ /* $id 不为数字 ,并且不等于0 */						show_404 ();					}					/* 获取单条内容 */					$website['_content'] = getRow ( $website['_channel']['model'], $id );					if(empty ( $website['_content'] ))					{						show_404 ();					}					if($website['_channel']['id'] != $website['_content']['columnid'])					{ /* 不是当前栏目 */						show_404 ();					}					$model = dbg_getModel ( $website['_channel']['model'] );					/* 更新点击 */					$upwebsitesql = "UPDATE {$model['table']} SET hits=hits+1 WHERE id=" . $id;					$this->db->query ( $upwebsitesql );					$website['tep_path'] = $website['_content']['views'];				}				else				{					if($website['_channel']['property'] == 2)					{						$website['_content'] = $website['_channel']['content'];						$next['title'] = '暂无~';						$next['link'] = '###';						$website['_next'] = $next;						$prev['title'] = '暂无~';						$prev['link'] = '###';						$website['_prev'] = $prev;					}				}				$website['_page'] = $this->input->get_post ( 'p' );				$website['_page'] = empty ( $website['_page'] ) ? 1 : $website['_page'];				if(! is_numeric ( $website['_page'] ))				{ // $website['_page'] 不为数字					show_404 ();				}				if($column != 'feedback')				{ // 栏目 内容列表					$website['_list'] = dbgColumnContentLists ( $website['_channel'], $website['_page'], $website['_pagebreak'], $website['_so'] ,$website['_total']);					if($id != NULL)					{ // 完善上一篇下一篇						foreach($website['_list'] as $key=>$val)						{							if($val['id'] == $id)							{								$next = $website['_list'][$key - 1];								if(empty ( $next ))								{									$next['title'] = '暂无~';									$next['link'] = '###';								}								$website['_next'] = $next;								$prev = $website['_list'][$key + 1];								if(empty ( $prev ))								{									$prev['title'] = '暂无~';									$prev['link'] = '###';								}								$website['_prev'] = $prev;							}						}					}				}			}		}		else		{			$website['tep_path'] = 'index.php';		}		// 当前位置导航		if(! empty ( $website['_channel'] ))		{			$website['_navigation'] = ' 当前位置：<a href="' . base_url () . '">首页</a>';			if(! empty ( $website['_channel']['parent'] ))			{				foreach($website['_channel']['parent'] as $val)				{					$website['_navigation'] .= '  ›› <a href="' . $val['link'] . '">' . $val['name'] . '</a>';				}			}						$website['_navigation'] .= '  ›› <a href="' . $website['_channel']['link'] . '">' . $website['_channel']['name'] . '</a>';			if(! empty ( $website['_content'] ))			{				$website['_navigation'] .= '  ›› <a href="' . $website['_content']['link'] . '">' . $website['_content']['title'] . '</a>';			}		}		        if (file_exists ( DBG_DATA . 'config.rootfuncs.php' )){                $rootfuncs = require DBG_DATA . 'config.rootfuncs.php';                $website['enshowadv'] = intval($rootfuncs['config']['enshowadv']);        }				require (_DBGMS_ . 'website.php');		$updete_html = $this->input->get_post ( 'html' );		if($updete_html == 'index')		{			$views = $this->load->view ( 'themes', $website, TRUE );			ob_start ();			echo $views;			$html = ob_get_contents ();			file_put_contents ( _ROOT_ . '/index.html', $html );			ob_get_clean ();		}		else		{			$this->load->view ( 'themes', $website );		}	}	// 筛选url 0408	public function getchannelsourl()	{		$wsql_so = '';		foreach($_POST['so'] as $key=>$value)		{						// 配置其他信息			if(is_array ( $value ))			{				if(count ( $value ) > 1)				{					$wsql_so .= '&so_' . $key . '=' . join ( ',', $value );				}				else				{					$wsql_so .= '&so_' . $key . '=' . $value[0];				}			}			else			{				$wsql_so .= '&so_' . $key . '=' . $value;			}		}				echo json_encode ( array(				'StatusCode' => 200,				'url' => $wsql_so 		) );		exit ();	}        	/* @action:验证码 */	public function captcha($session_sign)	{		// checkyzm,captcha		define ( 'DBG_OPEN', TRUE );		require (_DBGMS_ . 'dbgms.php');		set_time_limit ( 0 ); // 防止出现500 Internal Server Error		dbgms_LoadClass ( 'Hs.class.php' );		$hs_yzm = Hs::getInstance ();		$hs_yzm->startCreateCaptcha ( 'captcha' );	}}